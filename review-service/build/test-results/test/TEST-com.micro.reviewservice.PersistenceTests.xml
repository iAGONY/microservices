<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.micro.reviewservice.PersistenceTests" tests="6" skipped="0" failures="0" errors="0" timestamp="2024-04-14T08:57:16" hostname="suman-gajmer" time="1.008">
  <properties/>
  <testcase name="getByProductId()" classname="com.micro.reviewservice.PersistenceTests" time="0.621"/>
  <testcase name="optimisticLockError()" classname="com.micro.reviewservice.PersistenceTests" time="0.08"/>
  <testcase name="create()" classname="com.micro.reviewservice.PersistenceTests" time="0.186"/>
  <testcase name="delete()" classname="com.micro.reviewservice.PersistenceTests" time="0.059"/>
  <testcase name="update()" classname="com.micro.reviewservice.PersistenceTests" time="0.026"/>
  <testcase name="duplicateError()" classname="com.micro.reviewservice.PersistenceTests" time="0.029"/>
  <system-out><![CDATA[2024-04-14T14:42:03.719+05:45  INFO   --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.micro.reviewservice.PersistenceTests]: PersistenceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-04-14T14:42:03.835+05:45  INFO   --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.micro.reviewservice.ReviewServiceApplication for test class com.micro.reviewservice.PersistenceTests
2024-04-14T14:42:03.874+05:45  INFO   --- [    Test worker] org.testcontainers.images.PullPolicy     : Image pull policy will be performed by: DefaultPullPolicy()
2024-04-14T14:42:03.876+05:45  INFO   --- [    Test worker] o.t.utility.ImageNameSubstitutor         : Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
2024-04-14T14:42:03.963+05:45  INFO   --- [    Test worker] o.t.d.DockerClientProviderStrategy       : Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
2024-04-14T14:42:04.232+05:45  INFO   --- [    Test worker] o.t.d.DockerClientProviderStrategy       : Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
2024-04-14T14:42:04.234+05:45  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : Docker host IP address is localhost
2024-04-14T14:42:04.249+05:45  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : Connected to docker: 
  Server Version: 26.0.0
  API Version: 1.45
  Operating System: Ubuntu 22.04.2 LTS
  Total Memory: 14808 MB
2024-04-14T14:42:04.268+05:45  INFO   --- [    Test worker] tc.testcontainers/ryuk:0.6.0             : Creating container for image: testcontainers/ryuk:0.6.0
2024-04-14T14:42:04.272+05:45  INFO   --- [    Test worker] o.t.utility.RegistryAuthLocator          : Failure when attempting to lookup auth config. Please ignore if you don't have images in an authenticated registry. Details: (dockerImageName: testcontainers/ryuk:0.6.0, configFile: /home/suman/.docker/config.json, configEnv: DOCKER_AUTH_CONFIG). Falling back to docker-java default behaviour. Exception message: Status 404: No config supplied. Checked in order: /home/suman/.docker/config.json (file not found), DOCKER_AUTH_CONFIG (not set)
2024-04-14T14:42:04.479+05:45  INFO   --- [    Test worker] tc.testcontainers/ryuk:0.6.0             : Container testcontainers/ryuk:0.6.0 is starting: f329d643a3fad8e0da67f0aa105d0bcf8a79bcb4c9ca2a83eb7e2a92e10b9064
2024-04-14T14:42:04.781+05:45  INFO   --- [    Test worker] tc.testcontainers/ryuk:0.6.0             : Container testcontainers/ryuk:0.6.0 started in PT0.512820311S
2024-04-14T14:42:04.787+05:45  INFO   --- [    Test worker] o.t.utility.RyukResourceReaper           : Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
2024-04-14T14:42:04.787+05:45  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : Checking the system...
2024-04-14T14:42:04.788+05:45  INFO   --- [    Test worker] org.testcontainers.DockerClientFactory   : ✔︎ Docker server version should be at least 1.6.0
2024-04-14T14:42:04.791+05:45  INFO   --- [    Test worker] tc.mysql:8.0.32                          : Creating container for image: mysql:8.0.32
2024-04-14T14:42:04.856+05:45  INFO   --- [    Test worker] tc.mysql:8.0.32                          : Container mysql:8.0.32 is starting: c96ae29a27e93cd6f87ce35225f6ab6ecdadc15e4c27a1cd285d968b7da856b6
2024-04-14T14:42:05.097+05:45  INFO   --- [    Test worker] tc.mysql:8.0.32                          : Waiting for database connection to become available at jdbc:mysql://localhost:32847/test using query 'SELECT 1'
2024-04-14T14:42:13.505+05:45  INFO   --- [    Test worker] tc.mysql:8.0.32                          : Container mysql:8.0.32 started in PT8.713813258S
2024-04-14T14:42:13.506+05:45  INFO   --- [    Test worker] tc.mysql:8.0.32                          : Container is started (JDBC URL: jdbc:mysql://localhost:32847/test)

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2024-04-14T14:42:13.929+05:45  INFO 513591 --- [review] [    Test worker] c.micro.reviewservice.PersistenceTests   : Starting PersistenceTests using Java 17.0.10 with PID 513591 (started by suman in /home/suman/Workspace/microservices/review-service)
2024-04-14T14:42:13.930+05:45  INFO 513591 --- [review] [    Test worker] c.micro.reviewservice.PersistenceTests   : No active profile set, falling back to 1 default profile: "default"
2024-04-14T14:42:14.297+05:45  INFO 513591 --- [review] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-04-14T14:42:14.397+05:45  INFO 513591 --- [review] [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 94 ms. Found 1 JPA repository interface.
2024-04-14T14:42:14.689+05:45  INFO 513591 --- [review] [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-04-14T14:42:14.722+05:45  INFO 513591 --- [review] [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-04-14T14:42:14.745+05:45  INFO 513591 --- [review] [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-04-14T14:42:14.913+05:45  INFO 513591 --- [review] [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-04-14T14:42:14.932+05:45  INFO 513591 --- [review] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-04-14T14:42:15.056+05:45  INFO 513591 --- [review] [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3f5ac587
2024-04-14T14:42:15.058+05:45  INFO 513591 --- [review] [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-04-14T14:42:15.770+05:45  INFO 513591 --- [review] [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-04-14T14:42:15.814+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : create table reviews (id integer not null, author varchar(255), content varchar(255), product_id integer not null, review_id integer not null, subject varchar(255), version integer not null, primary key (id)) engine=InnoDB
Hibernate: create table reviews (id integer not null, author varchar(255), content varchar(255), product_id integer not null, review_id integer not null, subject varchar(255), version integer not null, primary key (id)) engine=InnoDB
2024-04-14T14:42:15.836+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : create table reviews_seq (next_val bigint) engine=InnoDB
Hibernate: create table reviews_seq (next_val bigint) engine=InnoDB
2024-04-14T14:42:15.851+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews_seq values ( 1 )
Hibernate: insert into reviews_seq values ( 1 )
2024-04-14T14:42:15.866+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : alter table reviews drop index reviews_unique_idx
Hibernate: alter table reviews drop index reviews_unique_idx
2024-04-14T14:42:15.874+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : alter table reviews add constraint reviews_unique_idx unique (product_id, review_id)
Hibernate: alter table reviews add constraint reviews_unique_idx unique (product_id, review_id)
2024-04-14T14:42:15.891+05:45  INFO 513591 --- [review] [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-04-14T14:42:15.910+05:45  INFO 513591 --- [review] [    Test worker] c.m.r.ReviewServiceApplication           : Creates a jdbcScheduler with thread pool size = 10
2024-04-14T14:42:16.210+05:45  INFO 513591 --- [review] [    Test worker] c.micro.reviewservice.PersistenceTests   : Started PersistenceTests in 2.658 seconds (process running for 13.409)
2024-04-14T14:42:16.754+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:16.769+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select next_val as id_val from reviews_seq for update
Hibernate: select next_val as id_val from reviews_seq for update
2024-04-14T14:42:16.771+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : update reviews_seq set next_val= ? where next_val=?
Hibernate: update reviews_seq set next_val= ? where next_val=?
2024-04-14T14:42:16.809+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:16.838+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.product_id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.product_id=?
2024-04-14T14:42:16.861+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:16.869+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:16.876+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select next_val as id_val from reviews_seq for update
Hibernate: select next_val as id_val from reviews_seq for update
2024-04-14T14:42:16.878+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : update reviews_seq set next_val= ? where next_val=?
Hibernate: update reviews_seq set next_val= ? where next_val=?
2024-04-14T14:42:16.883+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:16.892+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:16.898+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:16.904+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:16.911+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : update reviews set author=?,content=?,product_id=?,review_id=?,subject=?,version=? where id=? and version=?
Hibernate: update reviews set author=?,content=?,product_id=?,review_id=?,subject=?,version=? where id=? and version=?
2024-04-14T14:42:16.920+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:16.932+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:16.943+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:16.945+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:16.952+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:16.959+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:16.966+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:17.119+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select count(*) from reviews re1_0
Hibernate: select count(*) from reviews re1_0
2024-04-14T14:42:17.130+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:17.134+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:17.136+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:17.145+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:17.151+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:17.154+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:17.181+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select count(*) from reviews re1_0 where re1_0.id=?
Hibernate: select count(*) from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:17.189+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:17.193+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:17.200+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:17.202+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : update reviews set author=?,content=?,product_id=?,review_id=?,subject=?,version=? where id=? and version=?
Hibernate: update reviews set author=?,content=?,product_id=?,review_id=?,subject=?,version=? where id=? and version=?
2024-04-14T14:42:17.208+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0 where re1_0.id=?
2024-04-14T14:42:17.217+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
Hibernate: select re1_0.id,re1_0.author,re1_0.content,re1_0.product_id,re1_0.review_id,re1_0.subject,re1_0.version from reviews re1_0
2024-04-14T14:42:17.220+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : delete from reviews where id=? and version=?
Hibernate: delete from reviews where id=? and version=?
2024-04-14T14:42:17.227+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:17.234+05:45 DEBUG 513591 --- [review] [    Test worker] org.hibernate.SQL                        : insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
Hibernate: insert into reviews (author,content,product_id,review_id,subject,version,id) values (?,?,?,?,?,?,?)
2024-04-14T14:42:17.237+05:45  WARN 513591 --- [review] [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 1062, SQLState: 23000
2024-04-14T14:42:17.237+05:45 ERROR 513591 --- [review] [    Test worker] o.h.engine.jdbc.spi.SqlExceptionHelper   : Duplicate entry '1-2' for key 'reviews.reviews_unique_idx'
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
